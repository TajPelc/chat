buildscript {
	ext {
		kotlinVersion = '1.1.0'
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

plugins {
	id "com.moowork.node" version "1.1.1"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'chat'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.2"

	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6'

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'com.winterbe:expekt:0.5.0'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE'
}

node {
	// Version of node to use.
	version = '7.2.1'

	// Version of npm to use.
	npmVersion = '3.10.10'

	// Version of Yarn to use.
	yarnVersion = '0.21.3'

	// Base URL for fetching node distributions (change if you have a mirror).
	distBaseUrl = 'https://nodejs.org/dist'

	// If true, it will download node using above parameters.
	// If false, it will try to use globally installed node.
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")

	// Set the work directory for Yarn
	yarnWorkDir = file("${project.buildDir}/yarn")

	// Set the work directory where node_modules should be located
	nodeModulesDir = file("${project.projectDir}")
}

task yarnInstall(type: YarnTask) {
	// add the express package only
	args = ['install']
}

task frontendBuild(type: YarnTask, dependsOn: yarnInstall){
	args = ['run', 'build']
}

processResources.dependsOn frontendBuild
